Controller → Service → DAO → Mapper 쿼리

고객관리
create table customer(
id			number 
				constraint customer_id_pk primary key,
name		varchar2(50),
gender		varchar2(5),
email		varchar2(50),
phone		varchar2(13)
);

DBCP(DataBase Connection Pool)

필요한 라이브러리를 찾는 저장소 : mvnrepository.com


스프링에서 DB연결하기 위한 라이브러리
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-jdbc</artifactId>
    <version>5.2.5.RELEASE</version>
</dependency>


DB연결을 위한 DBCP 라이브러리 
<dependency>
    <groupId>commons-dbcp</groupId>
    <artifactId>commons-dbcp</artifactId>
    <version>1.4</version>
</dependency>


오라클DB 라이브러리
<dependency>
    <groupId>com.oracle.ojdbc</groupId>
    <artifactId>ojdbc8</artifactId>
    <version>19.3.0.0</version>
</dependency>
    
Mybatis 라이브러리   
 
<dependency>
    <groupId>org.mybatis</groupId>
    <artifactId>mybatis</artifactId>
    <version>3.5.4</version>
</dependency>

스프링에서 Mybatis를 사용할 수 있도록 하기 위한 라이브러리    
<dependency>
    <groupId>org.mybatis</groupId>
    <artifactId>mybatis-spring</artifactId>
    <version>2.0.4</version>
</dependency>


create table member(
name      varchar2(20) not null,
id      varchar2(20) constraint member_id_pk primary key,
pwd      varchar2(20) not null,
gender      varchar2(3) not null,
birth       date,
email      varchar2(50) not null,
post      varchar2(7),
addr      varchar2(100),
tel      varchar2(13),
admin      varchar2(1) default 'N' /*관리자여부 Y/N*/
);

관리자회원정보 저장
insert into member(name, id, pwd, gender, email, admin)
values('관리자', 'admin','Admin0','여','admin@iot.com','Y');

insert into member(name, id, pwd, gender, email, admin)
values('관리자', 'subAdmin','subAdmin0','여','admin@iot.com','Y');

공지글 관리
create table notice(
id      	number constraint notice_id_pk primary key,
title		varchar2(300) not null,
content		varchar2(4000) not null,
writer		varchar2(20) not null	/*관리자 회원의 id*/,
writedate	date default sysdate,
readcnt		number default 0 /*조회수*/, 
filename	varchar2(300),
filepath	varchar2(300)
root		number,
step		numer,
indent		number,
constraint notice_writer_fk foreign key(writer)
);

alter table notice
add ( root		number,
step		number default 0,
indent		number default 0 );

update notice set root = id;

create sequence seq_notice
start with 1 increment by 1;

insert int notice (id, title, content, writer)
values (seq_notice,nextval,'공지글테스트','테스트공지','admin');

방명록관리
create table board(
id		number constraint board_id_pk primary key,
title	varchar2(300) not null,
content varchar2(4000) not null,
writer	varchar2(10) not null /*사용자 회원의 id*/,
writedate date default 0,
readcnt	number default 0 /*조회수*/,
filename		varchar2(300),
filepath		varchar2(300),
constraint board_writer_fk foreign key(writer) references member(id) on delete cascade
);


회원탈퇴시 탈퇴한 회원이 작성한 방명록 글도 함께 삭제하려면 constraint에 option을 지정한다.

create sequence seq_board start with 1 increment by 1;
create or replace trigger trg_board
	before insert on board
	for each row
begin
	select seq_board.nextval into :new.id from dual;
end;
/

insert into board(title, writer, filename, filepath)
select title, content, filename, filepath from baord;

방명록댓글관리
create table board_comment(
id            number constraint board_comment_id_pk primary key,
bid           number /*방명록의 id*/ 
				 constraint board_comment_bid_fk references board(id)
				 				on delete cascade,
writer        varchar2(20) /*사용자회원의id*/
				constraint board_comment_writer_fk references member(id)
								on delete cascade,
content       varchar2(4000),
writedate     date default sysdate
);


create sequence seq_board_comment start with 1 increment by 1;
create or replace trigger trg_board_comment
	before insert on board_comment
	for each row
begin
	select seq_board_comment.nextval into :new.id  from dual;
end;
/
