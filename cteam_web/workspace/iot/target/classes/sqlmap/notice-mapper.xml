<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="notice.mapper">


<delete id="delete">
delete from notice
where id=#{id}
</delete>

<update id="update">
update notice 
set title=#{title}, content=#{content}, filename=#{filename, jdbcType=VARCHAR}, filepath=#{filepath, jdbcType=VARCHAR} 
where id=#{id}
</update>

<insert id="insert">
insert into notice(id, title, content, writer, filename, filepath, root)
values (seq_notice.nextval, #{title}, #{content}, #{writer}, #{filename, jdbcType=VARCHAR}, #{filepath, jdbcType=VARCHAR},seq_notice.currval)
</insert>

<update id="readcount">
update notice 
set readcnt = readcnt+1 
where id=#{id}
</update>

<select id="detail" resultType="notice.NoticeVO">
select notice.*, (select name from member where writer=member.id) name 
from notice 
where id=#{id}
</select>
<sql id="search_where">
<if test="search=='title' or search=='content'">
where ${search} like '%' || #{keyword} || '%'
</if>
<if test="search=='writer'">
where writer in (select id from member where name like '%' || #{keyword} || '%')
</if>
<if test="search=='all'">
where title like '%' || #{keyword} || '%'
or content like '%' || #{keyword} || '%'
or <include refid="search_writer" />
</if>
</sql>
<sql id="search_writer">
writer in (select id from member where name like '%' || #{keyword} || '%')
</sql>

<select id="total" resultType="Integer">
select count(*) 
from notice <include refid="search_where" />
</select>

<select id="list" resultType="notice.NoticeVO">
select n.* from
(select rownum no, n.*, (select name from member where writer=member.id) name 
from (select * from notice <include refid="search_where" /> order by root, step desc) n
order by no desc) n
where no between #{beginList} and #{endList}
</select>

<insert id="reply">
{
call declare
begin
	<![CDATA[
	update notice set step=step+1 where root=#{root} and step > #{step};
	insert into notice(id, title, content, writer, filename, filepath, root, step, indent)
	values (seq_notice.nextval, #{title}, #{content}, #{writer}, #{filename, jdbcType=VARCHAR}, #{filepath, jdbcType=VARCHAR}
	,#{root},#{step}+1,#{indent}+1);
	]]>
end
}
</insert>

</mapper>